/**
 * Burada json object - document mantığıyla bazı parameterleri tanımlayıp
 * dışarı export ediyoruz.
 */
ext {
    /**
     * Bu parametreler libs içinde bağımlılılların versiyonlarını tanımlar.
     */
    versions = [
            springBoot          : "2.7.7",
            springCloud         : "3.1.5",
            lombok              : "1.18.24",
            postgreSQL          : "42.5.1",
            swagger             : "1.6.14",
            mapstruct           : "1.5.3.Final",
    ]

    /**
     * BAğımlılık listesinde tanımlama yaparken sıralama şu şekilde olmalıdır.
     * 1. Bağımlılığın Adı
     * 2. : (iki nokta)
     * 3. Group Id (com.muhammet - projenin group idsi)
     * 4. : (iki nokta)
     * 5. Artifact Id (test - projenin artifact idsi yani proje adı)
     * 6. : (iki nokta)
     * 7. Versiyon (v.0.0.1 - projenin versiyonu) bu version yukarıda versions tan alınacaktır.
     */
    libs = [

         springBootDataJpa      : "org.springframework.boot:spring-boot-starter-data-jpa:${versions.springBoot}",
         springBootDataMongo    : "org.springframework.boot:spring-boot-starter-data-mongodb:${versions.springBoot}",
         springBootDataRedis    : "org.springframework.boot:spring-boot-starter-data-redis:${versions.springBoot}",
         springBootDataElasticsearch    : "org.springframework.boot:spring-boot-starter-data-elasticsearch:${versions.springBoot}",
         springBootWeb          : "org.springframework.boot:spring-boot-starter-web:${versions.springBoot}",
         springBootValidation   : "org.springframework.boot:spring-boot-starter-validation:${versions.springBoot}",
         springBootDevTools     : "org.springframework.boot:spring-boot-devtools:${versions.springBoot}",
         springCloudOpenFeign   : "org.springframework.cloud:spring-cloud-starter-openfeign:${versions.springCloud}",
         // Spring Cloud Config için gerekli bağmlılıklar. Server - Client için
         springCloudConfig      : "org.springframework.cloud:spring-cloud-starter-config:${versions.springCloud}",
         springCloudConfigServer: "org.springframework.cloud:spring-cloud-config-server:${versions.springCloud}",
         springCloudConfigClient: "org.springframework.cloud:spring-cloud-config-client:${versions.springCloud}",
         // Spring Cloud Gateway için gerekli bağmlılıklar. Server - Client için
         springCloudGateway     : "org.springframework.cloud:spring-cloud-starter-gateway:3.1.4",
         springCloudCircuitBreaker     : "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:2.1.4",
         springCloudCircuitBreakerReactor     : "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:2.1.4",
         // zipkin server için bağımlılıklar
         springCloudStarterSleuth    : "org.springframework.cloud:spring-cloud-starter-sleuth:3.1.5",
         springCloudStarterZipkin    : "org.springframework.cloud:spring-cloud-sleuth-zipkin:3.1.5",


         lombok                 : "org.projectlombok:lombok:${versions.lombok}",
         postgreSQL             : "org.postgresql:postgresql:${versions.postgreSQL}",
         swaggerui              : "org.springdoc:springdoc-openapi-ui:${versions.swagger}",
         mapstruct              : "org.mapstruct:mapstruct:${versions.mapstruct}",
         mapstructProcessor     : "org.mapstruct:mapstruct-processor:${versions.mapstruct}",

         // ghraphQL
         graphiqlSpringStarter   : "com.graphql-java-kickstart:graphiql-spring-boot-starter:11.1.0",
         graphqlSpringStarter    : "com.graphql-java-kickstart:graphql-spring-boot-starter:13.0.0",
         graphqlJavaTools        : "com.graphql-java-kickstart:graphql-java-tools:13.0.0",

        // jwt
         jwt                     : "com.auth0:java-jwt:4.2.2",

        // Spring AMQP ile RabbitMQ Kullanımı
        springBootStarterAmqp   : "org.springframework.boot:spring-boot-starter-amqp:${versions.springBoot}",

    ]
}